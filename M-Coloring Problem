//https://practice.geeksforgeeks.org/problems/m-coloring-problem/0


#include <bits/stdc++.h>
using namespace std;
typedef long long ll ;
int V [ 50 ][ 50 ] , color [ 50 ], flag , n , m ; 
bool IsSafe ( int index , int c )
{
    for ( int i = 1 ; i < index  ; i ++ )
    {
        if ( V [ i ][ index ] and color [ i ] ==c )
            return 0 ; 
    }
    
    return 1 ; 
}
void util ( int index  )
{
    if ( index == n + 1 )
    {
       flag = 1 ; 
       return ; 
    }
    
    for ( int i = 1 ; i <= m ; i ++ )
    {
        if ( IsSafe ( index , i ) )
        {
            color [ index ] = i ; 
            util  ( index + 1  ) ;
            if ( flag )
                return ; 
            color [ index ] = 0 ; 
        }
        
    }
}
int main() {
    
    
    int T ; 
    cin >> T ; 
    while ( T--)
    {
            ll  e ;  
            cin >> n >> m >> e ; 
            memset ( V , 0 , sizeof ( V ) ) ;
            memset ( color , 0 , sizeof ( color) ) ;
            flag = 0 ;
            for ( int i = 0 ; i < e ; i ++)
            {
                int x , y ; 
                cin >> x >> y ; 
                V [ x ] [ y ] = 1 ; 
                V [ y ] [ x ] = 1 ; 
            }
            flag = 0 ;
            util ( 0 ) ; 
            cout << flag << endl ; 
            
            
    }
	//code
	return 0;
}
