//https://leetcode.com/problems/permutations/

class Solution {
public:
    
    
    void util ( int pos , int n , vector < int > arr , vector < vector < int >  > &ans )
    {
         if ( pos == n - 1 )
         {
             ans.push_back ( arr ) ;
             return ;
         }
                 
        
        
        for ( int i = pos ; i < n ; i ++ )
        {
            swap ( arr [ pos ] , arr [ i ] ) ; 
            util ( pos+ 1 , n , arr , ans ) ; 
            swap ( arr [ pos ] , arr [ i ] ) ; 
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
        
        
      
        vector < vector < int > > ans ;
        if ( nums .size() == 0 )
        {
            ans.push_back ( nums ) ; 
            return ans ; 
        }
        util ( 0 , nums.size() , nums  ,ans  ) ; 
        return ans ; 
       
        
    }
};
